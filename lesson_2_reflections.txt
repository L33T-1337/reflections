What happens when you initialize a repository? Why do you need to do it?
When you initialize a git repository, git creates metadata to track the history of the repository. The reason for doing this is to give you the ability to revert back to previous commits.

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area is different from the working directory in that you can add files from the working directory before making a commit. The staging area is different from the repository in that the repository is the collection of all the commits and the staging area is where you place files before making a commit. The staging area is of value because it gives you the ability to place a pre determined amount of files from your working directory to create a commit.

How can you use the staging area to make sure you have one commit per logical change?
The staging area gives you the ability to place the file you made the change in into the commit while keeping the others the way they are. Therefore you achieve one commit per logical change.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When making experimental changes to files or creating different versions of games are situations that branches are helpful in keeping history organized. Branches make the version control process more flexible and efficient.

How do the diagrams help you visualize the branch structure?
The diagram puts the branch concept in to perspective.



